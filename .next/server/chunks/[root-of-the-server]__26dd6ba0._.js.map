{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///home/toastycommand/Desktop/portfolio.v3/src/app/api/readfile/route.tsx"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nexport async function GET() {\n\ttry {\n\t\t// Resolve the file path relative to the project root\n\t\tconst filePath = path.join(process.cwd(), 'src', 'app', 'caching', 'data', 'gitQueryLog.json');\n\n\t\t// Read the file contents\n\t\tconst fileContents = fs.readFileSync(filePath, 'utf8');\n\n\t\t// Parse the JSON data\n\t\tconst jsonData = JSON.parse(fileContents);\n\n\t\t// Return the JSON data as a response\n\t\treturn new Response(JSON.stringify(jsonData), {\n\t\t\tstatus: 200,\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t});\n\t} catch (error) {\n\t\t// Handle errors (e.g., file not found or JSON parsing error)\n\t\treturn new Response(JSON.stringify({ error: error.message }), {\n\t\t\tstatus: 500,\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t});\n\t}\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe;IACrB,IAAI;QACH,qDAAqD;QACrD,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,OAAO,WAAW,QAAQ;QAE3E,yBAAyB;QACzB,MAAM,eAAe,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;QAE/C,sBAAsB;QACtB,MAAM,WAAW,KAAK,KAAK,CAAC;QAE5B,qCAAqC;QACrC,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC,WAAW;YAC7C,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;QAC/C;IACD,EAAE,OAAO,OAAO;QACf,6DAA6D;QAC7D,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC,IAAI;YAC7D,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;QAC/C;IACD;AACD","debugId":null}}]
}