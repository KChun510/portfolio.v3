{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///home/toastycommand/Desktop/portfolio.v3/src/app/spotify_utils/json_actions.ts"],"sourcesContent":["import path from 'path';\nimport { fileURLToPath } from 'url';\nimport { token_res } from './types';\nimport { promises as fs } from 'fs';\n\n// Fix for __dirname in ESM (like tsx or native ES modules)\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\n// Always resolve relative to the current file\nconst tokenPath = path.join(__dirname, 'token_data.json');\n\nexport async function get_local_token(): Promise<token_res> {\n\tconst file_cont = await fs.readFile(tokenPath, 'utf8');\n\treturn file_cont ? JSON.parse(file_cont) : null;\n}\n\nexport async function write_token_data(file_cont: token_res) {\n\tawait fs.writeFile(tokenPath, JSON.stringify(file_cont));\n}\n\n"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;;;;;;;;;AAEA,2DAA2D;AAC3D,MAAM,aAAa,CAAA,GAAA,+FAAA,CAAA,gBAAa,AAAD,EAAE,8BAAY,GAAG;AAChD,MAAM,YAAY,iGAAA,CAAA,UAAI,CAAC,OAAO,CAAC;AAE/B,8CAA8C;AAC9C,MAAM,YAAY,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,WAAW;AAEhC,eAAe;IACrB,MAAM,YAAY,MAAM,6FAAA,CAAA,WAAE,CAAC,QAAQ,CAAC,WAAW;IAC/C,OAAO,YAAY,KAAK,KAAK,CAAC,aAAa;AAC5C;AAEO,eAAe,iBAAiB,SAAoB;IAC1D,MAAM,6FAAA,CAAA,WAAE,CAAC,SAAS,CAAC,WAAW,KAAK,SAAS,CAAC;AAC9C","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///home/toastycommand/Desktop/portfolio.v3/src/app/spotify_utils/api_endpoints.ts"],"sourcesContent":["import { get_local_token } from './json_actions'\nimport { CurrentSongData, SpotifyCurrentlyPlayingResponse, SpotifyPlaylist } from './types';\nconst playlist_id = '1w7opBRG814H7CMZaMOCN7'\n\nexport async function add_track_to_playlist() {\n\ttry {\n\t\tconst token_data = await get_local_token();\n\t\tconst url = new URL(`https://api.spotify.com/v1/playlists/${playlist_id}/tracks`)\n\n\t\tconst res = await fetch(url, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Authorization': 'Bearer ' + token_data.access_token,\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\turis: [\"spotify:track:4iV5W9uYEdYUVa79Axb7Rh\"]\n\t\t\t})\n\t\t})\n\t\tif (!res.ok) {\n\t\t\tconsole.error(`Error: ${res.status} ${res.statusText}`)\n\t\t\treturn false\n\t\t}\n\t\tconsole.log(`Success, track added to playlist`)\n\t\treturn true\n\n\t} catch (err) {\n\t\tconsole.error('Failed to add to playlist: ', err)\n\t\treturn false\n\n\t}\n}\n\nexport async function remove_track_from_playlist() {\n\ttry {\n\t\tconst token_data = await get_local_token();\n\t\tconst url = new URL(`https://api.spotify.com/v1/playlists/${playlist_id}/tracks`)\n\n\n\t\tconst res = await fetch(url, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {\n\t\t\t\t'Authorization': 'Bearer ' + token_data.access_token,\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\ttracks: [\n\t\t\t\t\t{\n\t\t\t\t\t\turi: \"spotify:track:4iV5W9uYEdYUVa79Axb7Rh\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t})\n\t\t})\n\t\tif (!res.ok) {\n\t\t\tconsole.error(`Error: ${res.status} ${res.statusText}`)\n\t\t\treturn false\n\t\t}\n\t\tconsole.log(`Success, track removed from playlist`)\n\t\treturn true\n\t} catch (err) {\n\t\tconsole.error('Failed to remove from playlist: ', err)\n\t\treturn false\n\t}\n}\n\nexport async function search_spotify() {\n\tconst token_data = await get_local_token();\n\tconst search_q = 'gorillaz'\n\tconst type = 'track'\n\tconst market = 'US'\n\tconst limit = '10'\n\n\tconst url = new URL(`https://api.spotify.com/v1/search?`)\n\turl.searchParams.append('q', search_q)\n\turl.searchParams.append('type', type)\n\turl.searchParams.append('market', market)\n\turl.searchParams.append('limit', limit)\n\n\ttry {\n\t\tconst res = await fetch(url, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'Authorization': 'Bearer ' + token_data.access_token\n\t\t\t}\n\t\t})\n\n\t\tif (!res.ok) {\n\t\t\tconsole.error(`Error: ${res.status} ${res.statusText}`)\n\t\t\treturn null\n\t\t}\n\t\tconst data = await res.json()\n\t\treturn data.tracks.items\n\n\t} catch (err) {\n\t\tconsole.error('Failed to fetch search: ', err)\n\t\treturn null\n\t}\n}\n\nexport async function get_playlist() {\n\ttry {\n\n\t\tconst token_data = await get_local_token();\n\t\tconst market = 'US'\n\n\t\tconst url = new URL(`https://api.spotify.com/v1/playlists/${playlist_id}`);\n\t\turl.searchParams.append('market', market)\n\n\t\tconst res = await fetch(url, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'Authorization': 'Bearer ' + token_data.access_token\n\t\t\t}\n\t\t})\n\t\tif (!res.ok) {\n\t\t\tconsole.error(`Error: ${res.status} ${res.statusText}`)\n\t\t\treturn null\n\t\t}\n\t\tconst data: SpotifyPlaylist = await res.json()\n\t\tconst song_data = data.tracks.items\n\n\t\tconst final_song_data = song_data.map(elem => ({\n\t\t\tsong_name: elem.track.name,\n\t\t\tsong_url: elem.track.external_urls,\n\t\t\talbum_cover: elem.track.album.images,\n\t\t\tartists_data: elem.track.artists,\n\t\t}))\n\n\t\treturn final_song_data\n\n\t} catch (err) {\n\t\tconsole.error('Failed to fetch playlist: ', err)\n\t\treturn null\n\t}\n}\n\nexport async function get_current_track(): Promise<CurrentSongData | null> {\n\ttry {\n\t\tconst token_data = await get_local_token();\n\t\tconst market = 'US'\n\t\tconst url = new URL('https://api.spotify.com/v1/me/player/currently-playing');\n\t\turl.searchParams.append('market', market);\n\n\t\tconst res = await fetch(url.toString(), {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'Authorization': 'Bearer ' + token_data.access_token\n\t\t\t},\n\t\t})\n\t\tif (!res.ok) {\n\t\t\tconsole.error(`Error: ${res.status} ${res.statusText}`)\n\t\t\treturn null\n\t\t}\n\t\tconst data: SpotifyCurrentlyPlayingResponse = await res.json()\n\t\tconst final_data = await extract_data_curr_song(data)\n\t\treturn final_data\n\n\t} catch (err) {\n\t\tconsole.error('Failed to fetch current track: ', err)\n\t\treturn null\n\t}\n}\n\nexport async function extract_data_curr_song(data: SpotifyCurrentlyPlayingResponse): Promise<CurrentSongData> {\n\tconst progress_ms: number | null = data.progress_ms\n\tconst is_playing = data.is_playing\n\tconst item_data = data.item\n\tlet song_artists: {\n\t\texternal_urls: { spotify: string };\n\t\thref: string;\n\t\tid: string;\n\t\tname: string;\n\t\ttype: string;\n\t\turi: string;\n\t}[] | null = null;\n\tlet song_cover_art: { height: number; url: string; width: number }[] | null = null;\n\tlet song_duration: number | null = null;\n\tlet song_name: string | null = null;\n\tlet song_direct_link: string | null = null\n\n\tconsole.log(data)\n\n\tif (item_data) {\n\t\tsong_artists = item_data.artists\n\t\tsong_cover_art = item_data.album.images\n\t\tsong_duration = item_data.duration_ms\n\t\tsong_name = item_data.name\n\t\tsong_direct_link = item_data.external_urls.spotify\n\t}\n\treturn {\n\t\tis_playing, progress_ms, item_data, song_artists, song_cover_art, song_duration, song_name, song_direct_link\n\t}\n}\n\n(async function main() {\n\t//console.log(await get_current_track())\n\t//console.log(await get_playlist())\n\t//console.log(await search_spotify())\n\t//await add_track_to_playlist()\n\t//await remove_track_from_playlist()\n})()\n\n\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file:///home/toastycommand/Desktop/portfolio.v3/src/app/api/spotify/get_current_track/route.tsx"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { get_current_track } from '../../../spotify_utils/api_endpoints'\n\nexport async function GET() {\n\ttry {\n\t\tconst data = await get_current_track()\n\t\tif (!data) {\n\t\t\tthrow new Error(\"Failed to get current track\")\n\t\t}\n\t\treturn NextResponse.json(data, { status: 200 })\n\t} catch (err) {\n\t\tconsole.error(err)\n\t\treturn NextResponse.json({ error: 'Internal Server Error' }, { status: 500 });\n\t}\n}\n\n\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe;IACrB,IAAI;QACH,MAAM,OAAO,MAAM,CAAA,GAAA,8IAAA,CAAA,oBAAiB,AAAD;QACnC,IAAI,CAAC,MAAM;YACV,MAAM,IAAI,MAAM;QACjB;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,MAAM;YAAE,QAAQ;QAAI;IAC9C,EAAE,OAAO,KAAK;QACb,QAAQ,KAAK,CAAC;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC5E;AACD","debugId":null}}]
}