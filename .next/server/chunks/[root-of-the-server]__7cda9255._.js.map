{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///home/toastycommand/Desktop/portfolio.v3/src/app/openai_utils/openAI_api.ts"],"sourcesContent":["import { OpenAI } from \"openai\"\nimport path from 'path';\nimport dotenv from 'dotenv'\ndotenv.config({ path: path.resolve(__dirname, '../../../.env') });\nconst openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY })\n\nexport async function analyze_userTag(user_tag: string) {\n\tconst meta_data = await openai.chat.completions.create({\n\t\tmessages: [{ role: \"system\", content: \"You are tasked with analyzing a user tag for my website, that is user-created. Determine if it's professional/ acceptable if a recruiter were to see the user tag. Nicknames and playful tags are allowed. Your output will be 'true': if acceptable or 'false': if denied\" },\n\t\t{ role: \"user\", content: `Here is the user tag analyze: ${user_tag}` }],\n\t\tmodel: \"gpt-4o-mini\",\n\t});\n\tconst metaContent = meta_data.choices[0].message.content\n\treturn metaContent\n}\n\n\n\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AACA;;;;AACA,uIAAA,CAAA,UAAM,CAAC,MAAM,CAAC;IAAE,MAAM,iGAAA,CAAA,UAAI,CAAC,OAAO,CAAC,WAAW;AAAiB;AAC/D,MAAM,SAAS,IAAI,mIAAA,CAAA,SAAM,CAAC;IAAE,QAAQ,QAAQ,GAAG,CAAC,cAAc;AAAC;AAExD,eAAe,gBAAgB,QAAgB;IACrD,MAAM,YAAY,MAAM,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QACtD,UAAU;YAAC;gBAAE,MAAM;gBAAU,SAAS;YAA6Q;YACnT;gBAAE,MAAM;gBAAQ,SAAS,CAAC,8BAA8B,EAAE,UAAU;YAAC;SAAE;QACvE,OAAO;IACR;IACA,MAAM,cAAc,UAAU,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO;IACxD,OAAO;AACR","debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///home/toastycommand/Desktop/portfolio.v3/src/app/api/openai/analyze_userTag/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport { analyze_userTag } from \"@/app/openai_utils/openAI_api\";\n\nexport async function POST(req: NextRequest) {\n\tif (req) {\n\t\tconst user_tag: string = await req.json()\n\t\tif (!user_tag) {\n\t\t\treturn NextResponse.json({ message: \"Error getting user tag\" }, {\n\t\t\t\tstatus: 202,\n\t\t\t});\n\t\t}\n\t\tfor (let i = 0; i < 2; ++i) {\n\t\t\tconst res = await analyze_userTag(user_tag)\n\t\t\tif (res === \"true\" || res === \"false\") {\n\t\t\t\treturn NextResponse.json({ data: res === \"true\" ? true : false }, {\n\t\t\t\t\tstatus: 200,\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (i === 1) {\n\t\t\t\treturn NextResponse.json({ data: undefined }, {\n\t\t\t\t\tstatus: 200,\n\t\t\t\t});\n\n\t\t\t}\n\t\t}\n\t}\n\treturn NextResponse.json({ message: \"Error getting req body\" }, {\n\t\tstatus: 500,\n\t});\n}\n\n\n\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,GAAgB;IAC1C,IAAI,KAAK;QACR,MAAM,WAAmB,MAAM,IAAI,IAAI;QACvC,IAAI,CAAC,UAAU;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAyB,GAAG;gBAC/D,QAAQ;YACT;QACD;QACA,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,EAAE,EAAG;YAC3B,MAAM,MAAM,MAAM,CAAA,GAAA,0IAAA,CAAA,kBAAe,AAAD,EAAE;YAClC,IAAI,QAAQ,UAAU,QAAQ,SAAS;gBACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBAAE,MAAM,QAAQ,SAAS,OAAO;gBAAM,GAAG;oBACjE,QAAQ;gBACT;YACD;YACA,IAAI,MAAM,GAAG;gBACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBAAE,MAAM;gBAAU,GAAG;oBAC7C,QAAQ;gBACT;YAED;QACD;IACD;IACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;IAAyB,GAAG;QAC/D,QAAQ;IACT;AACD","debugId":null}}]
}