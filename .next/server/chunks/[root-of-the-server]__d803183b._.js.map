{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///home/toastycommand/Desktop/portfolio.v3/src/app/api/readfile/route.tsx"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport { NextRequest, NextResponse } from 'next/server';\n\nexport async function GET(req: NextRequest) {\n\ttry {\n\t\t// Resolve the file path relative to the project root\n\t\tconst filePath = path.join(process.cwd(), 'src', 'app', 'caching', 'gitQueryLog.json');\n\n\t\t// Read the file contents\n\t\tconst fileContents = fs.readFileSync(filePath, 'utf8');\n\n\t\t// Parse the JSON data\n\t\tconst jsonData = JSON.parse(fileContents);\n\n\t\t// Return the JSON data as a response\n\t\treturn NextResponse.json(jsonData, { status: 200 });\n\t} catch (error) {\n\t\t// Handle errors (e.g., file not found or JSON parsing error)\n\t\treturn NextResponse.json({ error: error.message }, { status: 500 });\n\t}\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,IAAI,GAAgB;IACzC,IAAI;QACH,qDAAqD;QACrD,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,OAAO,WAAW;QAEnE,yBAAyB;QACzB,MAAM,eAAe,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;QAE/C,sBAAsB;QACtB,MAAM,WAAW,KAAK,KAAK,CAAC;QAE5B,qCAAqC;QACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,UAAU;YAAE,QAAQ;QAAI;IAClD,EAAE,OAAO,OAAO;QACf,6DAA6D;QAC7D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAClE;AACD","debugId":null}}]
}